/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotelbooking;

import java.text.SimpleDateFormat;
import java.sql.*;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kushagra Srivastava
 */
public class ViewBookings extends javax.swing.JFrame {

    /**
     * Creates new form ViewBookings
     */
    DefaultTableModel model;
    String username;
    boolean warn = false;
    
    public ViewBookings(String user) {
        setContentPane(new JLabel(new ImageIcon("D:\\\\JOOPS\\\\HotelBooking\\\\src\\\\hotelbooking\\\\bg1.jpg")));
        initComponents();
        
        bmt.setBorder(null);
        bmt.setBorderPainted(false);
        bmt.setContentAreaFilled(false);
        bmt.setOpaque(false);
        
        
        invalid_select.setVisible(false);
        notif.setVisible(false);
        username = user;
        hello.setText("Hello " + username +"!");
        displayTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        cancel = new javax.swing.JButton();
        hello = new javax.swing.JLabel();
        invalid_select = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        notif = new javax.swing.JLabel();
        modify = new javax.swing.JButton();
        bmt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setSize(new java.awt.Dimension(1280, 720));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Reference No", "Hotel Name", "No Of Rooms", "Check In Date", "Check Out Date", "Price", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        cancel.setText("Cancel Booking");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        hello.setFont(new java.awt.Font("Georgia", 2, 20)); // NOI18N
        hello.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hello.setText("Hello User!");

        invalid_select.setForeground(new java.awt.Color(255, 51, 51));
        invalid_select.setText("Please select a booking");

        jButton1.setText("Go back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Logout");
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        notif.setForeground(new java.awt.Color(255, 51, 51));
        notif.setText("For cancelling less than 3 days before check in 50% of the booking price will be charged. Press Cancel again to continue.");

        modify.setText("Modify Booking");
        modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyActionPerformed(evt);
            }
        });

        bmt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotelbooking/bmtlogo.png"))); // NOI18N
        bmt.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        bmt.setBorderPainted(false);
        bmt.setOpaque(false);
        bmt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bmt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(hello, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(109, 109, 109))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 206, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(invalid_select)
                                .addGap(422, 422, 422))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(notif)
                                .addGap(116, 116, 116))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(modify, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(390, 390, 390))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(hello, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(bmt)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(invalid_select)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(notif)
                .addGap(2, 2, 2)
                .addComponent(cancel)
                .addGap(18, 18, 18)
                .addComponent(modify)
                .addGap(1, 1, 1)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private java.util.Date convertDate(String xyz){
        java.util.Date checkinDate = new java.util.Date();
        try{
            checkinDate = new SimpleDateFormat("yyyy-MM-dd").parse(xyz);
        }
        catch(Exception e){
            System.out.println(e);
        }
        return checkinDate;
    }
    private void displayTable(){
        model = (DefaultTableModel) table.getModel();
        System.out.println(model);
        model.setRowCount(0);
        
        Connection myconn = null;
        Statement mystat = null;
        ResultSet myresult = null;
        
        try {
            System.out.println("bc");
            myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotels", "root", "n!gg3|2f@gg0t");
            mystat = myconn.createStatement();
            myresult = mystat.executeQuery("select * from bookings where Username = \'" + username + "\'" );
           
            while (myresult.next()) {
                model.insertRow(model.getRowCount(), new Object[]{myresult.getInt("RefNo"), myresult.getString("HotelName"), myresult.getInt("NoOfRooms"), myresult.getDate("FromDate").toString(), myresult.getDate("ToDate").toString(),myresult.getInt("Price"), myresult.getInt("Status")==1 ? "Confirmed":"Waiting List"});
            }
        } catch (Exception e) {
            System.out.println("bsdk");
            System.out.println(e);
        }

        try {
            if (myresult != null) {
                myresult.close();
            }
            if (mystat != null) {
                mystat.close();
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
    private void deleteEntry(int refno, String cancelledHotel){
        Connection myconn = null;
        Statement mystat = null;
        ResultSet myresult = null;
        ResultSet waitingList = null, confirmedList = null;
        try{
            myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotels", "root", "n!gg3|2f@gg0t"); 
            String sql = "delete from bookings where RefNo = ?";
            PreparedStatement statement = myconn.prepareStatement(sql);
            statement.setInt(1, refno);
            statement.executeUpdate();
            displayTable();
        }
        catch(Exception e){
            System.out.println("xxxxxxxxxxxxxx");
            System.out.println(e);
        }
        
        try{
            myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotels", "root", "n!gg3|2f@gg0t"); 
            String sql1 = "select * from bookings where HotelName = ? and Status = 0";
            PreparedStatement statement1 = myconn.prepareStatement(sql1);
            statement1.setString(1, cancelledHotel);
            waitingList = statement1.executeQuery();
            
            mystat =  myconn.createStatement();
            myresult = mystat.executeQuery("select AvailableRooms from hotels where Name = \'"+cancelledHotel+"\'");
            myresult.next();
            int totalrooms = myresult.getInt(1);
            
            while(waitingList.next()){
                java.sql.Date fromDate = waitingList.getDate(5);
                java.sql.Date toDate = waitingList.getDate(6);
                int newref = waitingList.getInt(1);
                
                String sql2 = "select * from bookings where HotelName = ? and Status = 1 and (FromDate<=? and ToDate>=? or FromDate<=? and ToDate>=?)";
                PreparedStatement statement2 = myconn.prepareStatement(sql2);
                statement2.setString(1, cancelledHotel);
                statement2.setDate(2, fromDate);
                statement2.setDate(3, fromDate);
                statement2.setDate(4, toDate);
                statement2.setDate(5, toDate);
                confirmedList = statement2.executeQuery();
                
                int requiredrooms = waitingList.getInt(4);
                int occupiedrooms = 0;
                
                while(confirmedList.next()){
                    occupiedrooms += confirmedList.getInt(4);
                }
                
                if(totalrooms - occupiedrooms >= requiredrooms){
                    System.out.println("qwerty");
                    String query = "update bookings set Status = ? where RefNo = ?";
                    PreparedStatement stat = myconn.prepareStatement(query);
                    stat.setInt(1, 1);
                    stat.setInt(2, newref);
                    stat.executeUpdate();
                }
            }
        }
        catch(Exception e){
            System.out.println("kallu bhosdi");
            System.out.println(e);
        }
    }
    
   
    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        int column = 3;
        int hotelnamecol = 1;
        int row = table.getSelectedRow();
        
        if(table.getSelectedRow()==-1){
            invalid_select.setVisible(true);
        }
        else{
            invalid_select.setVisible(false);
            
            String cancelledHotel = table.getModel().getValueAt(row, hotelnamecol).toString();
            int refno = Integer.parseInt(table.getModel().getValueAt(row, 0).toString());
            String checkinDateString = table.getModel().getValueAt(row, column).toString();
            java.util.Date checkinDate = convertDate(checkinDateString);
            java.util.Date today = new java.util.Date();
            System.out.println(checkinDate);
            int remdays = Math.toIntExact((checkinDate.getTime()-today.getTime())/86400000);
            if(remdays > 3){
                notif.setVisible(false);
                deleteEntry(refno,cancelledHotel);
            }
            else{
                if(warn){
                    deleteEntry(refno,cancelledHotel);
                    notif.setVisible(false);
                }
                else{
                    notif.setVisible(true);
                    warn = true;
                }
            }
        }
        
        
    }//GEN-LAST:event_cancelActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ViewBookings.this.setVisible(false);
        OptionSelection os = new OptionSelection(username);
        os.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ViewBookings.this.setVisible(false);
        HomePage hp = new HomePage();
        hp.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void modifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyActionPerformed
        // TODO add your handling code here:
        warn = false;
        if(table.getSelectedRow()==-1)
        {
            invalid_select.setVisible(true);
            invalid_select.setText("Please select a booking");
        }
        
        else {
            int row = table.getSelectedRow();
            String cancelledHotel = table.getModel().getValueAt(row, 1).toString();
            String checkinDateString = table.getModel().getValueAt(row, 3).toString();
            java.util.Date checkinDate = convertDate(checkinDateString);
            java.util.Date today = new java.util.Date();
            int days = Math.toIntExact((checkinDate.getTime()-today.getTime())/86400000);
            System.out.println(checkinDate);
            System.out.println(days);
            if(days > 3){
                int refno = Integer.parseInt(table.getModel().getValueAt(row, 0).toString());
                invalid_select.setVisible(false);
                int p = Integer.parseInt(table.getModel().getValueAt(row, 5).toString());
                ViewBookings.this.setVisible(false);
                ModifyBookings mb = new ModifyBookings(refno,cancelledHotel,username, p);
                mb.setVisible(true);
            }
            else{
                invalid_select.setVisible(true);
                invalid_select.setText("Sorry booking cannot be modified less than 3 days prior to check in date");
            }
            
        }
    }//GEN-LAST:event_modifyActionPerformed

    private void bmtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmtActionPerformed
        // TODO add your handling code here:
        ViewBookings.this.setVisible(false);

        HomePage hp = new HomePage();
        hp.setVisible(true);
    }//GEN-LAST:event_bmtActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bmt;
    private javax.swing.JButton cancel;
    private javax.swing.JLabel hello;
    private javax.swing.JLabel invalid_select;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modify;
    private javax.swing.JLabel notif;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
